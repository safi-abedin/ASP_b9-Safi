@model QuestionDetailsModel

@{
    ViewData["Title"] = "Question Details";
}

@section Styles{
    <link rel="stylesheet" src="~/stackoverflow/stacks-editor/dist/styles.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@@stackoverflow/stacks-editor/dist/styles.css" />
    <link rel="stylesheet" href="https://unpkg.com/@@stackoverflow/stacks/dist/css/stacks.min.css">
    <link rel="stylesheet" href="~/stackoverflow/stacks/dist/css/stacks.min.css" />
    <link rel="stylesheet" href="~/stackoverflow/stacks/dist/css/stacks.css" />
    <link rel="stylesheet" src="~/stackoverflow/stacks-editor/dist/styles.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@@stackoverflow/stacks-editor/dist/styles.css" />
    <link rel="stylesheet" href="https://unpkg.com/@@stackoverflow/stacks/dist/css/stacks.min.css">
}

<div class="container">
    <div class="s-page-title">
        <div class="s-page-title--text">
            <h1 class="s-page-title--header">@Model.title</h1>
        </div>
        <div class="s-page-title--actions">
            <a class="s-btn s-btn__filled mb-3" asp-action="create" asp-area="user" asp-controller="questions" type="submit">Ask Question</a>
        </div>
    </div>

    <div class="row">
        <div class="col-md-1 d-flex flex-column justify-content-center align-items-center">
            <a asp-action="QuestionUpVote" asp-area="User" asp-controller="Questions" asp-route-id="@Model.Id">
                <svg width="36" height="36" viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M2 25H34L18 9L2 25Z" fill="black" />
                </svg>
            </a>
            <h1 class="">@Model.VoteCount</h1>
            <a asp-action="QuestionDownVote" asp-area="User" asp-controller="Questions" asp-route-id="@Model.Id">
                <svg width="36" height="36" viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M2 11H34L18 27L2 11Z" fill="black" />
                </svg>
            </a>
        </div>

        <div class="col-md-8">
            <div class="user-inputs ">
             <pre class="s-code-block  ">
                    @Html.Raw(Model.Body)
            </pre>
            </div>
            <hr />
            <div class="tags-askedby">
                <div class="row justify-content-end">
                    <div class="col-md-4">
                        <a href="/user/questions/edit?id=@Model.Id" class="s-link">Edit</a>
                        <a href="/user/questions/delete?id=@Model.Id" class="s-link">Delete</a>
                    </div>
                    <div class="col-md-4">
                        @if(Model.Tags is not null){
                            @foreach (var tag in Model.Tags)
                            {
                                <a class="s-tag">@tag.Name</a>
                            }
                        }
                    </div>
                    <div class="col-md-5">
                        <div class="s-user-card s-user-card__highlighted">
                            <time class="s-user-card--time">Created on @Model.CreationDateTime  ago </time>
                            <a href="…" class="s-avatar s-avatar__32 s-user-card--avatar">
                                <img class="s-avatar--image" src="@Model.QuestionedByUserImageUrl" />
                            </a>
                            <div class="s-user-card--info">
                                <a href="…" class="s-user-card--link">@Model.DisplayName</a>
                                <ul class="s-user-card--awards">
                                    <li class="s-user-card--rep">@Model.Reputation</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <hr />

    <h1>@Model.AnswerCount Answers</h1>

    <br />
    <div class="answers">
        @if (Model.AnswerCount > 0)
        {
            foreach (var answer in Model.Answers)
            {
                <div class="row">
                    <div class="col-md-1 d-flex flex-column justify-content-center align-items-center">
                        <a>
                            <svg width="36" height="36" viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M2 25H34L18 9L2 25Z" fill="black" />
                            </svg>
                        </a>
                        <h1>@answer.VoteCount</h1>
                        <a>
                            <svg width="36" height="36" viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M2 11H34L18 27L2 11Z" fill="black" />
                            </svg>
                        </a>
                    </div>

                    <div class="col-md-8">
                        <div class="user-inputs ">
                            <pre class="s-code-block  ">
                                @Html.Raw(answer.Body)
                    </pre>
                        </div>
                        <hr />
                        @{
                        <div class="tags-askedby">
                            <div class="row justify-content-end">
                                <div class="col-md-5">
                                    <div class="s-user-card s-user-card__highlighted">
                                        <time class="s-user-card--time">Answered on @answer.AnswerTime</time>
                                        <a href="…" class="s-avatar s-avatar__32 s-user-card--avatar">
                                                @{ var imageUrl = Model.AnswerdByUserDetails[answer.AnsweredByCreatorEmail].AnswerdByUserImageUrl;}
                                                <img class="s-avatar--image" src="@imageUrl" />
                                        </a>
                                        <div class="s-user-card--info">
                                                @{
                                                    var DisplayName = Model.AnswerdByUserDetails[answer.AnsweredByCreatorEmail].AnswredByDisplayName;
                                                }
                                                <a href="…" class="s-user-card--link">@DisplayName</a>
                                            <ul class="s-user-card--awards">
                                                    @{
                                                        var Reputation = Model.AnswerdByUserDetails[answer.AnsweredByCreatorEmail].AnswerdByUserReputation;
                                                    }
                                                <li class="s-user-card--rep">@Reputation</li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        }
                    </div>
                </div>
                <hr />
            }
        }
    </div>

    <hr />
    <br />
</div>

<div class="container">

    <div class="col-md-10">
        <br />
        <h1 class="s-title">Your Answer</h1>
        <br />
        <form id="questionForm" asp-action="Details" asp-controller="Questions" asp-area="User" asp-antiforgery="true" method="post">

            <div class="form-group mb-3">
                <div id="editor-example-2"></div>
                <textarea id="editor-content-2" asp-for="TriedApproach" class="d-none"></textarea>
                <span asp-validation-for="TriedApproach" class="text-danger"></span>
            </div>

            <br />

            <button class="s-btn s-btn__filled mb-3" type="submit">Post Your Answer</button>
            <br />
        </form>
    </div>
</div>




@section Scripts{
    <script src="https://cdn.jsdelivr.net/npm/@@stackoverflow/stacks-editor/dist/app.bundle.js"></script>
    <script src="~/AdminLTE/plugins/select2/js/select2.full.min.js"></script>

    <script>

        $('#tags').select2();

    </script>


    <script>
        // Event listener for submitting the form
        document.querySelector("#questionForm").addEventListener("submit", function (event) {


            // Get the element containing the user input for "TriedApproach"
            var userInputDiv2 = document.querySelector('#editor-example-2 .s-prose');

            // Get the inner HTML of the user input element for "TriedApproach"
            var userInputHTML2 = userInputDiv2.innerHTML;

            // Set the content of "TriedApproach" hidden textarea
            document.querySelector("#editor-content-2").value = userInputHTML2;

        });

        // Initialize Stacks Editor for "TriedApproach"
        new window.stacksEditor.StacksEditor(
            document.querySelector("#editor-example-2"),
            document.querySelector("#editor-content-2").value,
            {
                parserFeatures: {
                    tables: true,
                },
               
            }
        );


    </script>

}




